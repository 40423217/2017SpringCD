<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>2017Spring 協同產品設計實習 (虎尾科大MDE)</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2017-05-31T10:05:00+08:00</updated><entry><title>W15練習</title><link href="./w15lian-xi.html" rel="alternate"></link><published>2017-05-31T10:05:00+08:00</published><updated>2017-05-31T10:05:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-05-31:./w15lian-xi.html</id><summary type="html">&lt;!-- PELICAN_END_SUMMARY --&gt;

&lt;p&gt;Part1_齒數36齒、壓力角20度漸開線正齒輪(全齒輪)。&lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.height)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20

#學號
Spur(ctx).Gear(x, y, r, n, pa, "blue")
ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "35px ScriptS"
ctx.fillText("40423217 ",350,350)
ctx.stroke()

&lt;/script&gt;

&lt;p&gt;  &lt;/p&gt;

&lt;p&gt;Part2_齒數36齒、壓力角20度漸開線正齒輪(半齒輪)。(方法一)&lt;/p&gt;

&lt;p&gt;  &lt;/p&gt;

&lt;p&gt;&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;&lt;/p&gt;
&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear2" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear2_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(18):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear2']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")

ctx.beginPath()
ctx.lineWidth="3"
ctx.strokeStyle="red"
ctx.moveTo(0,300)
ctx.lineTo(800,300)
ctx.stroke()

ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "35px ScriptS"
ctx.fillText("40423217 ",450,350)
ctx.stroke()

&lt;/script&gt;

&lt;p&gt;  &lt;/p&gt;

&lt;p&gt;Part3_齒數36齒、壓力角20度漸開線正齒輪(半齒輪)&lt;/p&gt;

&lt;p&gt;偷吃步版本，利用白線遮擋住下半圓齒輪。&lt;/p&gt;

&lt;p&gt;  &lt;/p&gt;

&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear3" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear3_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear3']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 36
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")

ctx.beginPath()
ctx.lineWidth="600"
ctx.strokeStyle="white"
ctx.moveTo(0,600)
ctx.lineTo(800,600)
ctx.stroke()

#覆蓋用白線
ctx.beginPath()
ctx.lineWidth="3"
ctx.strokeStyle="red"
ctx.moveTo(0,300)
ctx.lineTo(800,300)
ctx.stroke()

#學號
ctx.beginPath()
ctx.fillStyle = "   #2894FF"
ctx.font = "35px ScriptS"
ctx.fillText("40423217 ",450,350)
ctx.stroke()

&lt;/script&gt;

&lt;p&gt;2017Spring_CD_W15_practive_video&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/220569252" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/220569252"&gt;2017Spring_CD_W15_practice&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;2017Spring_CD_W15&lt;/p&gt;

&lt;p&gt;40423217 W15練習&lt;/p&gt;

&lt;p&gt;Part1.&lt;/p&gt;

&lt;p&gt;36齒 全齒輪。&lt;/p&gt;

&lt;p&gt;完成後在齒輪中安上"學號"。&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#學號
Spur(ctx).Gear(x, y, r, n, pa, &amp;quot;blue&amp;quot;)
ctx.beginPath()
ctx.fillStyle = &amp;quot;   #2894FF&amp;quot;
ctx.font = &amp;quot;35px ScriptS&amp;quot;
ctx.fillText(&amp;quot;40423217 &amp;quot;,350,350)
ctx.stroke()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Part2.&lt;/p&gt;

&lt;p&gt;36齒 半齒輪。(方法一)&lt;/p&gt;

&lt;p&gt;更改函數 n→18&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt; for j in range(18):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;但是斷面為垂直方向&lt;/p&gt;

&lt;p&gt;Part3.&lt;/p&gt;

&lt;p&gt;36齒 半齒輪。(方法二)&lt;/p&gt;

&lt;p&gt;利用白線覆蓋齒輪下半圓。&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;#覆蓋用白線
ctx.beginPath()
ctx.lineWidth=&amp;quot;3&amp;quot;
ctx.strokeStyle=&amp;quot;red&amp;quot;
ctx.moveTo(0,300)
ctx.lineTo(800,300)
ctx.stroke()
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Part4.&lt;/p&gt;

&lt;p&gt;"onegear"圖框 個別 Part 要分開。&lt;/p&gt;</summary><category term="W15"></category></entry><entry><title>2017Spring_CD_Involute&amp;Involute_Gear-Solvespace</title><link href="./2017spring_cd_involuteinvolute_gear-solvespace.html" rel="alternate"></link><published>2017-05-31T10:00:00+08:00</published><updated>2017-05-31T10:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-05-31:./2017spring_cd_involuteinvolute_gear-solvespace.html</id><summary type="html">&lt;p&gt;介紹課程大綱

&lt;p&gt; 本單元是利用 SolveSpace 繪製 Involute &amp;amp; Involute_Gear &lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;利用 SolveSpace 繪製 Involute (漸開線)&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;SolveSpace_Involute_Part1&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;漸開線繪製原理說明 &lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;
&lt;iframe src="https://player.vimeo.com/video/219469177" width="640" height="347" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/219469177"&gt;SolveSpace_Involute_Part1&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;SolveSpace_Involute_Part2&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;導入漸開線繪製出漸開線正齒輪&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;
&lt;iframe src="https://player.vimeo.com/video/219469185" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/219469185"&gt;SolveSpace_Involute_Part2&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;利用 SolveSpace 繪製 Involute_Gear (漸開線齒輪)&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;SolveSpace_Involute_Gear_part1&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;漸開線齒輪 Data 建立，利用繪製漸開線時建立的 Data 完成漸開線齒輪繪製&lt;/p&gt;
&lt;p&gt;模數&lt;/p&gt;
&lt;p&gt;壓力角&lt;/p&gt;
&lt;p&gt;齒數&lt;/p&gt;
&lt;p&gt;(轉位係數)&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;
&lt;iframe src="https://player.vimeo.com/video/219546423" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/219546423"&gt;SolveSpace_Involute_Gear_part1&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;SolveSpace_Involute_Gear_part2&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;
&lt;iframe src="https://player.vimeo.com/video/219546506" width="640" height="360" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/219546506"&gt;SolveSpace_Involute_Gear_part2&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;/p&gt;&lt;/p&gt;</summary><category term="W13"></category></entry><entry><title>2017Spring_CD_Cango_2D_SpurSimulate</title><link href="./2017spring_cd_cango_2d_spursimulate.html" rel="alternate"></link><published>2017-05-16T11:00:00+08:00</published><updated>2017-05-16T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-05-16:./2017spring_cd_cango_2d_spursimulate.html</id><summary type="html">&lt;p&gt;正齒輪2d模擬

&lt;!-- 導入 Brython 標準程式庫 --&gt;&lt;/p&gt;
&lt;script src="../data/Brython-3.3.1/brython.js"&gt;&lt;/script&gt;

&lt;script src="../data/Brython-3.3.1/brython_stdlib.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){
// 設定 data/py 為共用程式路徑
brython({debug:1, pythonpath:['./../data/py']});
}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 繪圖--&gt;

&lt;canvas id="onegear" width="800" height="600"&gt;&lt;/canvas&gt;

&lt;div id="onegear_div" width="800" height="20"&gt;&lt;/div&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# deg 為角度轉為徑度的轉換因子
deg = math.pi/180.
# 定義 Spur 類別
class Spur(object):
    def __init__(self, ctx):
        self.ctx = ctx

    def create_line(self, x1, y1, x2, y2, width=3, fill="red"):
        self.ctx.beginPath()
        self.ctx.lineWidth = width
        self.ctx.moveTo(x1, y1)
        self.ctx.lineTo(x2, y2)
        self.ctx.strokeStyle = fill
        self.ctx.stroke()
    #
    # 定義一個繪正齒輪的繪圖函式
    # midx 為齒輪圓心 x 座標
    # midy 為齒輪圓心 y 座標
    # rp 為節圓半徑, n 為齒數
    # pa 為壓力角 (deg)
    # rot 為旋轉角 (deg)
    # 已經針對 n 大於等於 52 齒時的繪圖錯誤修正, 因為 base circle 與齒根圓大小必須進行判斷
    def Gear(self, midx, midy, rp, n=20, pa=20, color="black"):
        # 齒輪漸開線分成 15 線段繪製
        imax = 15
        # 在輸入的畫布上繪製直線, 由圓心到節圓 y 軸頂點畫一直線
        self.create_line(midx, midy, midx, midy-rp)
        # 畫出 rp 圓, 畫圓函式尚未定義
        #create_oval(midx-rp, midy-rp, midx+rp, midy+rp, width=2)
        # a 為模數 (代表公制中齒的大小), 模數為節圓直徑(稱為節徑)除以齒數
        # 模數也就是齒冠大小
        a=2*rp/n
        # d 為齒根大小, 為模數的 1.157 或 1.25倍, 這裡採 1.25 倍
        d=2.5*rp/n
        # ra 為齒輪的外圍半徑
        ra=rp+a
        # 畫出 ra 圓, 畫圓函式尚未定義
        #create_oval(midx-ra, midy-ra, midx+ra, midy+ra, width=1)
        # rb 則為齒輪的基圓半徑
        # 基圓為漸開線長齒之基準圓
        rb=rp*math.cos(pa*deg)
        # 畫出 rb 圓 (基圓), 畫圓函式尚未定義
        #create_oval(midx-rb, midy-rb, midx+rb, midy+rb, width=1)
        # rd 為齒根圓半徑
        rd=rp-d
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        # 畫出 rd 圓 (齒根圓), 畫圓函式尚未定義
        #create_oval(midx-rd, midy-rd, midx+rd, midy+rd, width=1)
        # dr 則為基圓到齒頂圓半徑分成 imax 段後的每段半徑增量大小
        # 將圓弧分成 imax 段來繪製漸開線
        # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
        if rd&gt;rb:
            dr = (ra-rd)/imax
        else:
            dr=(ra-rb)/imax
        # tan(pa*deg)-pa*deg 為漸開線函數
        sigma=math.pi/(2*n)+math.tan(pa*deg)-pa*deg
        for j in range(n):
            ang=-2.*j*math.pi/n+sigma
            ang2=2.*j*math.pi/n+sigma
            lxd=midx+rd*math.sin(ang2-2.*math.pi/n)
            lyd=midy-rd*math.cos(ang2-2.*math.pi/n)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(alpha-ang)
                ypt=r*math.cos(alpha-ang)
                xd=rd*math.sin(-ang)
                yd=rd*math.cos(-ang)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由左側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    lfx=midx+xpt
                    lfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # the line from last end of dedendum point to the recent
            # end of dedendum point
            # lxd 為齒根圓上的左側 x 座標, lyd 則為 y 座標
            # 下列為齒根圓上用來近似圓弧的直線
            self.create_line((lxd),(lyd),(midx+xd),(midy-yd),fill=color)
            for i in range(imax+1):
                # 當 rd 大於 rb 時, 漸開線並非畫至 rb, 而是 rd
                if rd&gt;rb:
                    r=rd+i*dr
                else:
                    r=rb+i*dr
                theta=math.sqrt((r*r)/(rb*rb)-1.)
                alpha=theta-math.atan(theta)
                xpt=r*math.sin(ang2-alpha)
                ypt=r*math.cos(ang2-alpha)
                xd=rd*math.sin(ang2)
                yd=rd*math.cos(ang2)
                # i=0 時, 繪線起點由齒根圓上的點, 作為起點
                if(i==0):
                    last_x = midx+xd
                    last_y = midy-yd
                # 由右側齒根圓作為起點, 除第一點 (xd,yd) 齒根圓上的起點外, 其餘的 (xpt,ypt)則為漸開線上的分段點
                self.create_line((midx+xpt),(midy-ypt),(last_x),(last_y),fill=color)
                # 最後一點, 則為齒頂圓
                if(i==imax):
                    rfx=midx+xpt
                    rfy=midy-ypt
                last_x = midx+xpt
                last_y = midy-ypt
            # lfx 為齒頂圓上的左側 x 座標, lfy 則為 y 座標
            # 下列為齒頂圓上用來近似圓弧的直線
            self.create_line(lfx,lfy,rfx,rfy,fill=color)
canvas = doc['onegear']
ctx = canvas.getContext("2d")
x = (canvas.width)/2
y = (canvas.height)/2
r = 0.8*(canvas.height/2)
# 齒數
n = 53
# 壓力角
pa = 20
Spur(ctx).Gear(x, y, r, n, pa, "blue")
# 以下列出 W11 2B 與 2A 未出席人數
data = open("./../data/w11/2b0503.txt", encoding="utf-8").read()
data1 = open("./../data/w11/2a0504.txt", encoding="utf-8").read()
count = 0
count1 = 0
# 去掉前面兩列
student = data.split("\n")[2:]
student1 = data1.split("\n")[2:]
for i in range(len(student)):
    each = student[i].split("\t")
    # 請注意, Brython 在 Windows 環境無法正確判定字串, 原因不明
    if each[1] != "出席":
        count = count + 1
for i in range(len(student1)):
    each1 = student1[i].split("\t")
    if each1[1] != "present":
        count1 = count1 + 1
div = doc["onegear_div"]
div &lt;= "2b: " +  str(count) + "/" + str(len(student)) + "|" + "2a: " +  str(count1) + "/" + str(len(student1))
&lt;/script&gt;

&lt;!-- 以下處理 Cango Spur Gear --&gt;

&lt;!-- Cango 程式庫 --&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/Cango-9v05-min.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/CangoAxes-2v09.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/CangoAnimation-5v00.js"&gt;&lt;/script&gt;

&lt;script type="text/javascript" src="./../data/w11/cango
/gearUtils-05.js"&gt;&lt;/script&gt;

&lt;canvas id='cango_gear' width='800' height='750'&gt;&lt;/canvas&gt;

&lt;script type="text/python"&gt;
# 將 導入的 document 設為 doc 主要原因在於與舊程式碼相容
from browser import document as doc
# 由於 Python3 與 Javascript 程式碼已經不再混用, 因此來自 Javascript 的變數, 必須居中透過 window 物件轉換
from browser import window
import math

# 主要用來取得畫布大小
canvas = doc["cango_gear"]
# 此程式採用 Cango Javascript 程式庫繪圖, 因此無需 ctx
ctx = canvas.getContext("2d")
cango = window.Cango.new
# 針對變數的轉換, shapeDefs 在 Cango 中資料型別為變數, 可以透過 window 轉換
shapedefs = window.shapeDefs
# 目前 Cango 結合 Animation 在 Brython 尚無法運作, 此刻只能繪製靜態圖形
# in CangoAnimation.js
#interpolate1 = window.interpolate
# Cobi 與 createGearTooth 都是 Cango Javascript 程式庫中的物件
#cobj = window.Cobj.new
shape = window.Shape.new
path = window.Path.new
creategeartooth = window.createGearTooth.new

tweener = window.Tweener.new
# 經由 Cango 轉換成 Brython 的 cango, 指定將圖畫在 id="cango_gear" 的 canvas 上
cgo = cango("cango_gear")

######################################
# 畫正齒輪輪廓
#####################################
# n 為齒數
n = 17
# pa 為壓力角
pa = 25
# m 為模數, 根據畫布的寬度, 計算適合的模數大小
# Module = mm of pitch diameter per tooth
m = 0.8*canvas.width/n
# pr 為節圓半徑
pr = n*m/2 # gear Pitch radius
# generate gear
data = creategeartooth(m, n, pa)
# Brython 程式中的 print 會將資料印在 Browser 的 console 區
#print(data)
gearTooth = shape(data, {
  "fillColor":"#ddd0dd",
  "border": True,
  "strokeColor": "#606060" })
gearTooth.rotate(180/n) # rotate gear 1/2 tooth to mesh
# 單齒的齒形資料經過旋轉後, 將資料複製到 gear 物件中
gear = gearTooth.dup()
# gear 為單一齒的輪廓資料
#cgo.render(gearTooth)

# 利用單齒輪廓旋轉, 產生整個正齒輪外形
for i in range(1, n):
    # 將 gearTooth 中的資料複製到 newTooth
    newTooth = gearTooth.dup()
    # 配合迴圈, newTooth 的齒形資料進行旋轉, 然後利用 appendPath 方法, 將資料併入 gear
    newTooth.rotate(360*i/n)
    # appendPath 為 Cango 程式庫中的方法, 第二個變數為 True, 表示要刪除最前頭的 Move to SVG Path 標註符號
    gear.appendPath(newTooth, True) # trim move command = True

# 建立軸孔
# add axle hole, hr 為 hole radius
hr = 0.6*pr # diameter of gear shaft
shaft = path(shapedefs.circle(hr))
shaft.revWinding()
gear.appendPath(shaft) # retain the 'moveTo' command for shaft sub path

# setup the animation
# backlash (mm)
bklsh = 0.04*m
# centre shift to make backlash
dC = bklsh/(2*math.tan(math.pi*pa/180))
# np 為小齒輪齒數
np = 13
# gear ratio
gr = n/np              
gearConfig = {'cx':-pr, 'cy':0, 'degs':[0, 360]}
# gr*0.666 rpm
#pinionConfig = {'cx':pr+dC, 'cy':0, 'degs':[0, -gr*360]}
# 0.666 rpm
twnr = tweener(0, 90000, "loop")

cx = canvas.width/2
cy = canvas.height/2
#gear.translate(cx, cy)
# render 繪出靜態正齒輪輪廓
#cgo.render(gear)
# 利用 gear 資料複製一份, 命名為 gear1
gear1 = gear.dup()

from time import time
from browser.timer import request_animation_frame as raf
from browser.timer import set_interval

deg = math.pi/180

def draw():
    cgo.clearCanvas()
    gear.rotate(2*deg)
    # 在特定位置, 以特定 scale, 特定 degs 執行 render
    cgo.render(gear, {'x':cx-pr/2, 'y':cy, 'scl':0.5, 'degs':0})
    gear1.rotate(-2*deg)
    cgo.render(gear1, {'x':cx+pr*2*0.5-pr/2, 'y':cy, 'scl':0.5, 'degs':0})

set_interval(draw, 2)
&lt;/script&gt;</summary><category term="spur"></category></entry><entry><title>Midterm_test_n3</title><link href="./midterm_test_n3.html" rel="alternate"></link><published>2017-04-19T11:01:00+08:00</published><updated>2017-04-19T11:01:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-04-19:./midterm_test_n3.html</id><summary type="html">&lt;p&gt;使用py進行有效率的分組

&lt;p&gt;Fourbar Walker OnShape 零件協同繪圖與組立&lt;/p&gt;
&lt;p&gt;Part1_利用Solvespace建立機構架構&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/213788229" width="640" height="491" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/213788229"&gt;NFU_MDE_2017SpringCD_MidtermN3_40423217_Part1.mp4&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Part2_小組協同零件繪製&amp;Share&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/213788213" width="640" height="491" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/213788213"&gt;NFU_MDE_2017SpringCD_MidtermN3_40423217_Part2&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Part3_小組協同零件繪製&amp;Share，開始組立&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/213788226" width="640" height="491" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/213788226"&gt;NFU_MDE_2017SpringCD_MidtermN3_40423217_Part3.mp4&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Part4_小組協同組立&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/213788277" width="640" height="447" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/213788277"&gt;NFU_MDE_2017SpringCD_MidtermN3_40423217_Part4&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Part5_小組協同組立Share&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/213788308" width="640" height="447" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/213788308"&gt;NFU_MDE_2017SpringCD_MidtermN3_40423217_Part5&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Part6_小組協同組立Share&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/213789354" width="640" height="447" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/213789354"&gt;NFU_MDE_2017SpringCD_MidtermN3_40423217_Part6.mp4&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="W10"></category></entry><entry><title>Midterm_test_n2</title><link href="./midterm_test_n2.html" rel="alternate"></link><published>2017-04-19T11:00:00+08:00</published><updated>2017-04-19T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-04-19:./midterm_test_n2.html</id><summary type="html">&lt;p&gt;使用py進行有效率的分組

&lt;p&gt;Solvespace簡單四連趕機構---繪製&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/213774053" width="640" height="512" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href="https://vimeo.com/213774053"&gt;40423217_2017springcd_midterm_test_n2-1&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Solvespace簡單四連趕機構---TracePoint&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/213774060" width="640" height="470" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;p&gt;&lt;a href="https://vimeo.com/213774060"&gt;40423217_2017springcd_midterm_test_n2-2&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="W10"></category></entry><entry><title>2017Spring_CD_W12</title><link href="./2017spring_cd_w12.html" rel="alternate"></link><published>2017-03-07T11:00:00+08:00</published><updated>2017-03-07T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-03-07:./2017spring_cd_w12.html</id><summary type="html">&lt;p&gt;介紹課程大綱

&lt;p&gt;本週起各組將進行期末協同實習專案規劃與執行，請各組在上課時段準備以&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;oral presentation&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;text presentation&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;theoretical presentation&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;逐步朝期末週 physical presentation 的目標邁進。&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;oral presentation：&lt;/p&gt;
&lt;p&gt;口語說明進度、規劃細節、分工情形與問題討論等。&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;text presentation：&lt;/p&gt;
&lt;p&gt;以 github pages 中的 blog 與 Fossil SCM 倉儲 wiki 紀錄每週專題執行情形，&lt;/p&gt;
&lt;p&gt;並利用 github 與 Fossil SCM 倉儲管理所衍生的檔案。&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;theoretical presentation：&lt;/p&gt;
&lt;p&gt;利用 Solvespace 、 Onshape 、 V-rep 與 Brython 進行各種系統評估模擬。&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;physical presentation：&lt;/p&gt;
&lt;p&gt;在期末考週必須完成實體模型製作，並以 videos 展示各階段的準備工作與執行結果。&lt;/p&gt;&lt;/p&gt;</summary><category term="W12"></category></entry><entry><title>Week 3</title><link href="./week-3.html" rel="alternate"></link><published>2017-03-07T11:00:00+08:00</published><updated>2017-03-07T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-03-07:./week-3.html</id><summary type="html">&lt;p&gt;介紹課程大綱

&lt;p&gt;本週起各組將進行期末協同實習專案規劃與執行，請各組在上課時段準備以&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;oral presentation&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;text presentation&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;theoretical presentation&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;逐步朝期末週 physical presentation 的目標邁進。&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;oral presentation：&lt;/p&gt;
&lt;p&gt;口語說明進度、規劃細節、分工情形與問題討論等。&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;text presentation：&lt;/p&gt;
&lt;p&gt;以 github pages 中的 blog 與 Fossil SCM 倉儲 wiki 紀錄每週專題執行情形，&lt;/p&gt;
&lt;p&gt;並利用 github 與 Fossil SCM 倉儲管理所衍生的檔案。&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;theoretical presentation：&lt;/p&gt;
&lt;p&gt;利用 Solvespace 、 Onshape 、 V-rep 與 Brython 進行各種系統評估模擬。&lt;/p&gt;
&lt;p&gt;  &lt;/p&gt;
&lt;p&gt;physical presentation：&lt;/p&gt;
&lt;p&gt;在期末考週必須完成實體模型製作，並以 videos 展示各階段的準備工作與執行結果。&lt;/p&gt;&lt;/p&gt;</summary><category term="2017Spring_CD_W12"></category></entry><entry><title>Solvespace&amp;Onshape四足機械獸 機械腿機構繪製</title><link href="./solvespaceonshapesi-zu-ji-jie-shou-ji-jie-tui-ji-gou-hui-zhi.html" rel="alternate"></link><published>2017-03-01T11:00:00+08:00</published><updated>2017-03-01T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-03-01:./solvespaceonshapesi-zu-ji-jie-shou-ji-jie-tui-ji-gou-hui-zhi.html</id><summary type="html">&lt;p&gt;使用py進行有效率的分組

&lt;p&gt;使用ethercalc製作簡易的分組表格&lt;/p&gt;
&lt;p&gt;認識cp950(大五碼)&lt;/p&gt;
&lt;p&gt;使用py建立分組程序，並且挑出未被分類的學生&lt;/p&gt;
&lt;p&gt;製作簡易連桿組&lt;/p&gt;
&lt;p&gt;了解vrep起始抓點，在做stl檔的時候原點需跟物件拉開一定距離&lt;/p&gt;
&lt;p&gt;2017Spring_CD_week2_hw&lt;/p&gt;
&lt;p&gt;繪圖介面 Onshape &amp;amp; Solvespace&lt;/p&gt;
&lt;p&gt;繪圖介面 Solvespace Part1&lt;/p&gt;
&lt;p&gt;Solvespace 四足機械獸 機械腿機構繪製_Part1大綱&lt;/p&gt;&lt;/p&gt;
&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part2組件"曲柄"繪製&lt;/p&gt;

&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part3組件"浮桿"繪製&lt;/p&gt;

&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part4組件"搖桿"繪製&lt;/p&gt;

&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part5組立&lt;/p&gt;

&lt;p&gt;繪圖介面 Onshape Part2&lt;/p&gt;

&lt;p&gt;Onshape 機械腿機構繪製_Part1大綱&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/209477621" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209477621"&gt;2017-03-22_06-34-54&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Onshape 簡單四連趕機構繪製_Part2組件繪製_範例"曲柄"&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/209477624" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209477624"&gt;2017-03-22_06-48-31&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Onshape 簡單四連趕機構繪製_Part3組件"Pin"繪製&amp;組立(一)&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/209477697" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209477697"&gt;2017-03-22_06-38-58&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Onshape 簡單四連趕機構繪製_Part3組件"Pin"繪製&amp;組立(二)&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/209477772" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209477772"&gt;2017-03-22_06-59-49&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/209477797" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209477797"&gt;2017-03-22_07-01-59&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/209477863" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209477863"&gt;2017-03-22_07-08-16&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/209477921" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209477921"&gt;2017-03-22_07-12-37&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src="https://player.vimeo.com/video/209477995" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/209477995"&gt;2017-03-22_07-17-53&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="W2"></category></entry><entry><title>Solvespace&amp;Onshape簡單四連趕機構繪製</title><link href="./solvespaceonshapejian-dan-si-lian-gan-ji-gou-hui-zhi.html" rel="alternate"></link><published>2017-02-24T11:00:00+08:00</published><updated>2017-02-24T11:00:00+08:00</updated><author><name>yen</name></author><id>tag:,2017-02-24:./solvespaceonshapejian-dan-si-lian-gan-ji-gou-hui-zhi.html</id><summary type="html">&lt;p&gt;介紹課程大綱

&lt;p&gt;了解Blender 3dstudio maya之相關性&lt;/p&gt;
&lt;p&gt;stunnel 的使用 http的proxy&lt;/p&gt;
&lt;p&gt;在py語言中,;(分號)=註解&lt;/p&gt;
&lt;p&gt;簡略介紹c語言與py的優劣與使用時機&lt;/p&gt;
&lt;p&gt;利用cmd輸出ipconfig /all 查詢ip後&lt;/p&gt;
&lt;p&gt;至stunnel&amp;gt;config&amp;gt;stunnel.conf\,利用Scite找到http字串修改其ip&lt;/p&gt;
&lt;p&gt;進入例如https://192.168.1.24/2017springvcp_hw/index 的協同區域,並且嘗試以anonymous（無名氏/遊客）的身份進入&lt;/p&gt;
&lt;p&gt;利用vrep配合Scite打開的ttt檔完成做動模擬&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;2017Spring_CD_week1_hw&lt;/p&gt;
&lt;p&gt;繪圖介面 Onshape &amp;amp; Solvespace&lt;/p&gt;
&lt;p&gt;繪圖介面 Solvespace Part1&lt;/p&gt;
&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part1大綱&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209383417" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209383417"&gt;2017-03-07_20-18-36&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part2組件"曲柄"繪製&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209383479" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209383479"&gt;2017-03-07_20-23-02&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part3組件"浮桿"繪製&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209383546" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209383546"&gt;2017-03-07_20-30-33&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part4組件"搖桿"繪製&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209383617" width="640" height="333" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209383617"&gt;2017-03-07_20-33-09&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Solvespace 簡單四連趕機構繪製_Part5組立&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209398902" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209398902"&gt;2017-03-21_22-41-15&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;繪圖介面 Onshape Part2&lt;/p&gt;
&lt;p&gt;Onshape 簡單四連趕機構繪製_Part1大綱&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209398902" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209398902"&gt;2017-03-21_22-41-15&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Onshape 簡單四連趕機構繪製_Part2組件繪製_範例"曲柄"&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209398991" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209398991"&gt;2017-03-21_22-47-24&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Onshape 簡單四連趕機構繪製_Part3組件"Pin"繪製&amp;amp;組立(一)&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209399087" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209399087"&gt;2017-03-21_22-55-55&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Onshape 簡單四連趕機構繪製_Part3組件"Pin"繪製&amp;amp;組立(二)&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/209399147" width="640" height="325" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href="https://vimeo.com/209399147"&gt;2017-03-21_23-06-31&lt;/a&gt; from &lt;a href="https://vimeo.com/user61170413"&gt;40423217&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;&lt;/p&gt;</summary><category term="W1"></category></entry></feed>